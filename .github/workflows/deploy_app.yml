name: Deploy App

on:
  push:
    branches: [ main ]  # Change to your main branch name if different

jobs:
  deploy:
    runs-on: ubuntu-latest
    # Add permissions to read organization secrets
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v3

      - name: Set up R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: '4.4.3'  # Updated to use R 4.4.3

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libcurl4-openssl-dev \
            libssl-dev \
            libxml2-dev \
            libfontconfig1-dev \
            libfreetype6-dev \
            libharfbuzz-dev \
            libfribidi-dev \
            libpng-dev \
            libtiff5-dev \
            libjpeg-dev

      - name: Install renv and rsconnect
        run: |
          install.packages(c("renv", "rsconnect"))
        shell: Rscript {0}

      - name: Cache R packages
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.R_LIBS_USER }}
            ~/.local/share/renv
            .renv
          key: ${{ runner.os }}-renv-${{ hashFiles('**/renv.lock') }}
          restore-keys: |
            ${{ runner.os }}-renv-

      - name: Restore and install dependencies through renv
        run: |
          # Speed up renv restore by setting options
          options(
            renv.config.cache.enabled = TRUE,
            renv.config.cache.symlinks = TRUE,
            renv.config.install.verbose = FALSE
          )
          
          # Use restore with automatic package installation
          renv::restore(prompt = FALSE)
          
          # Make sure rsconnect is available for deployment
          if (!requireNamespace("rsconnect", quietly = TRUE)) {
            install.packages("rsconnect")
          }
        shell: Rscript {0}

      - name: Check environment variables (debugging)
        env:
          SHINYAPPS_TOKEN: ${{ secrets.SHINYAPPS_TOKEN }}
          SHINYAPPS_SECRET: ${{ secrets.SHINYAPPS_SECRET }}
          SHINYAPPS_ACCOUNT: ${{ secrets.SHINYAPPS_ACCOUNT }}
        run: |
          echo "Token exists: $([ ! -z "$SHINYAPPS_TOKEN" ] && echo "Yes" || echo "No")"
          echo "Secret exists: $([ ! -z "$SHINYAPPS_SECRET" ] && echo "Yes" || echo "No")"
          echo "Account exists: $([ ! -z "$SHINYAPPS_ACCOUNT" ] && echo "Yes" || echo "No")"
          echo "Account value: $SHINYAPPS_ACCOUNT"
        shell: bash
        
      - name: Authorize and deploy app
        env:
          SHINYAPPS_TOKEN: ${{ secrets.SHINYAPPS_TOKEN }}
          SHINYAPPS_SECRET: ${{ secrets.SHINYAPPS_SECRET }}
          SHINYAPPS_ACCOUNT: ${{ secrets.SHINYAPPS_ACCOUNT }}
        run: |
          # Set account info with explicit variables
          token <- Sys.getenv("SHINYAPPS_TOKEN")
          secret <- Sys.getenv("SHINYAPPS_SECRET")
          account <- Sys.getenv("SHINYAPPS_ACCOUNT")
          
          # Show account name for debugging (safe to display in logs)
          cat("Using account name:", account, "\n")
          
          # Validate that we have all required authentication info
          if (token == "" || secret == "" || account == "") {
            stop("Missing shinyapps.io authentication information. Please check your organization secrets.")
          }
          
          rsconnect::setAccountInfo(
            name = account,
            token = token,
            secret = secret
          )
          
          # Create a list of files to exclude (rsconnect folder and any other unwanted files)
          exclude_list <- c("rsconnect/", ".git/", ".github/", ".gitignore", "README.md")
          
          # Deploy with renv but exclude the rsconnect folder
          rsconnect::deployApp(
            appName = "${{ github.event.repository.name }}",
            account = account,
            forceUpdate = TRUE,
            appFiles = NULL,  # Setting to NULL will include all files except those in appFileIgnore
            appFileIgnore = exclude_list,
            appDependencies = TRUE
          )
        shell: Rscript {0}
        shell: Rscript {0}